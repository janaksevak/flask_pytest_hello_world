version: 2.1

orbs:
  python: circleci/python@3.1.0
  browser-tools: circleci/browser-tools@1.5.3

executors:
  python-executor:
    docker:
      - image: cimg/python:3.9-browsers
      # - image: cimg/python:3.9.22-browsers

jobs:
  build:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: Check versions
          command: |
            echo "Check versions Done"
            google-chrome --version
            chromedriver --version
      - run:
          name: Install dependencies
          command: |
            pip3 install -r requirements.txt
            pip show selenium
      - run:
          name: Run Flask in background
          command: |
            export FLASK_APP=hello_world.py
            flask run --host=0.0.0.0 --port=5000 &
            sleep 3
            lsof -i :5000 || echo "Port not open"
            curl -s http://localhost:5000 || echo "Flask is not running"
            python -c "import requests; print(requests.get('http://localhost:5000').status_code)"
      - run:
          name: Create Log Directory
          command: mkdir test_results
      - run:
          name: Run Hello World Tests
          command: pytest test_hello_world.py > test_results/test_output.log 2>&1
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: test_results

  test:
    executor: python-executor
    steps:
      - run:
          name: Echo Test 1
          command: echo "Test -1"
      - run:
          name: Echo Test 2
          command: echo "Test -2"
      - run:
          name: Echo Test 3
          command: echo "Test -3"
      - run:
          name: Echo Test 4
          command: echo "Test -4"


  deploy-staging:
    executor: python-executor
    steps:
      - run:
          name: Echo Deploy Staging 1
          command: echo "Deploy Staging-1"
      - run:
          name: Echo Deploy 2
          command: echo "Deploy Staging-2"

  deploy-prod:
    executor: python-executor
    steps:
      - run:
          name: Echo Deploy Prod 1
          command: echo "Deploy Prod-1"
      - run:
          name: Echo Deploy Prod 2
          command: echo "Deploy Prod-2"

workflows:
  prod_run:
    jobs:
      - build
      - test:
          requires:
            - build      
      - deploy-staging:
          requires:
            - test
      - deploy-prod:
          requires:
            - test
