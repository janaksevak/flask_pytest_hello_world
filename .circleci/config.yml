version: 2.1

orbs:
  python: circleci/python@3.1.0

jobs:
  build_and_test:
    docker:
      # Use an ARM64-compatible image
      - image: cimg/python:3.12
    steps:
      - checkout
      # Install Chrome and ChromeDriver manually
      - run:
          name: Install Chrome
          command: |
            sudo apt-get update
            sudo apt-get install -y wget unzip
            wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo apt install -y ./google-chrome-stable_current_amd64.deb
      - run:
          name: Install Chromedriver
          command: |
            CHROME_VERSION=$(google-chrome --version | sed 's/[^0-9.]//g' | cut -d '.' -f 1)
            CHROMEDRIVER_VERSION=$(wget -qO- "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
            wget -N https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
            unzip chromedriver_linux64.zip
            sudo mv chromedriver /usr/local/bin/
            sudo chmod +x /usr/local/bin/chromedriver
      - run:
          name: Install dependencies
          command: |
            pip3 install -r requirements.txt
      - run:
          name: Run Flask in background
          command: |
            export FLASK_APP=hello_world.py
            flask run --host=0.0.0.0 &
            sleep 8  # Give Flask more time to start up
      - run:
          name: Verify Flask is running
          command: |
            # Wait for Flask to fully initialize
            for i in {1..5}; do
              if curl -s http://localhost:5000 > /dev/null; then
                echo "Flask is running!"
                break
              fi
              echo "Waiting for Flask to start... (attempt $i)"
              sleep 2
            done
      - run:
          name: Run Tests
          command: |
            # Set display for Chrome
            export DISPLAY=:99
            # Setup virtual display for headless Chrome
            sudo apt-get install -y xvfb
            Xvfb :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
            # Run tests with detailed output
            pytest test_hello_world.py -v

workflows:
  build_and_test:
    jobs:
      - build_and_test
